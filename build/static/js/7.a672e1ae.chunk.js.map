{"version":3,"sources":["components/quotes/HighlightedQuote.module.css","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","HighlightedQuote","props","className","classes","quote","text","author","QuoteDetail","quoteId","useParams","useHttp","getSingleQuote","sendRequest","loadedQuote","data","status","error","useEffect","LoadingSpinner"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,MAAQ,kC,iFCUXC,EATU,SAACC,GACxB,OACE,yBAAQC,UAAWC,IAAQC,MAA3B,UACE,4BAAIH,EAAMI,OACV,qCAAaJ,EAAMK,a,uBCuCVC,UArCK,WAClB,IAAQC,EAAYC,cAAZD,QACR,EAKIE,YAAQC,KAAgB,GAJ1BC,EADF,EACEA,YACMC,EAFR,EAEEC,KACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,MAOF,OAJAC,qBAAU,WACRL,EAAYJ,KACX,CAACI,EAAaJ,IAEF,YAAXO,EAEA,qBAAKb,UAAU,WAAf,SACE,cAACgB,EAAA,EAAD,MAKFF,EACK,mBAAGd,UAAU,QAAb,SAAsBc,IAG1BH,EAAYR,KAKf,qCACE,cAAC,EAAD,CAAkBA,KAAMQ,EAAYR,KAAMC,OAAQO,EAAYP,SAC9D,cAAC,IAAD,OANK","file":"static/js/7.a672e1ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__G4uWT\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Outlet, useParams } from \"react-router-dom\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport HighLightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport useHttp from \"../hooks/use-http\";\r\n\r\nconst QuoteDetail = () => {\r\n  const { quoteId } = useParams();\r\n  const {\r\n    sendRequest,\r\n    data: loadedQuote,\r\n    status,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"error\">{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HighLightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Outlet />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}