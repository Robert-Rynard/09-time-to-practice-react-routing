{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","NewQuote","navigate","useNavigate","useHTTP","addQuote","sendRequest","status","useEffect","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,0ECKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,wBC0C/BC,EAxCG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBAarB,OACE,cAAC,EAAD,UACE,uBAAMN,UAAWC,IAAQO,KAAMC,SAbnC,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBP,EAAeQ,QAAQC,MACvCC,EAAcR,EAAaM,QAAQC,MAIzCf,EAAMiB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAK9C,UACGhB,EAAMoB,WACL,qBAAKnB,UAAWC,IAAQmB,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAKrB,UAAWC,IAAQqB,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKrB,OAEtC,sBAAKL,UAAWC,IAAQqB,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKnB,OAEpC,qBAAKP,UAAWC,IAAQ2B,QAAxB,SACE,wBAAQ5B,UAAU,MAAlB,+B,uBCZK6B,UAnBE,WACf,IAAMC,EAAWC,cACjB,EAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAErBC,qBAAU,WACO,cAAXD,GACFL,EAAS,aAEV,CAACK,EAAQL,IAMZ,OACE,cAAC,EAAD,CAAWX,UAAsB,YAAXgB,EAAsBnB,WALtB,SAACqB,GACvBH,EAAYG","file":"static/js/6.8d456206.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3UtKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1XKKh\",\"loading\":\"QuoteForm_loading__2PmhG\",\"control\":\"QuoteForm_control__2TEN4\",\"actions\":\"QuoteForm_actions__3x6o4\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\nimport { useRef } from \"react\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor=\"author\">Author</label>\n          <input type=\"text\" id=\"author\" ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"text\">Text</label>\n          <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button className=\"btn\">Add Quote</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from \"react\";\r\n\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport { addQuote } from \"../lib/api\";\r\nimport useHTTP from \"../hooks/use-http\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst NewQuote = () => {\r\n  const navigate = useNavigate();\r\n  const { sendRequest, status } = useHTTP(addQuote);\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      navigate(\"/quotes\");\r\n    }\r\n  }, [status, navigate]);\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n  };\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}